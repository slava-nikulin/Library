@model Library.Models.AccountRoomModel

<div id="change-pass">
    <h3>Change password</h3>
    @using (Ajax.BeginForm("ChangePassword", "Account", new AjaxOptions
    {
        OnSuccess = "showStatus",
        HttpMethod = "post",
        UpdateTargetId = "change-pass",
    },
        new { id = "ChangePassForm", @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="bg-danger">
            @Html.ValidationSummary()
        </div>
@*<p class="message-success">@ViewBag.StatusMessage</p>*@
        <fieldset>
            <legend>Change Password Form</legend>
            <div class="form-group">
                @Html.LabelFor(m => m.PasswordModel.OldPassword, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-5">
                    @Html.PasswordFor(m => m.PasswordModel.OldPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PasswordModel.NewPassword, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-5">
                    @Html.PasswordFor(m => m.PasswordModel.NewPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PasswordModel.ConfirmPassword, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-5">
                    @Html.PasswordFor(m => m.PasswordModel.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <input type="submit" value="Change password" />@*onclick="ChangePasswordAsync(this); return false;"*@
        </fieldset>
    }

    <script>
        function showStatus() {
            alert('@ViewBag.StatusMessage');
        }
    </script>
</div>
